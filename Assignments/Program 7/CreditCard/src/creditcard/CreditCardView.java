/*
 * CreditCardView.java
 */

package creditcard;

import org.jdesktop.application.Action;
import org.jdesktop.application.ResourceMap;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;
import org.jdesktop.application.TaskMonitor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Timer;
import javax.swing.Icon;
import javax.swing.JDialog;
import javax.swing.JFrame;
import buisness.Card;
import java.text.NumberFormat;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 * The application's main frame.
 */
public class CreditCardView extends FrameView {
    Card cc;

    public CreditCardView(SingleFrameApplication app) {
        super(app);

        initComponents();

        // status bar initialization - message timeout, idle icon and busy animation, etc
        ResourceMap resourceMap = getResourceMap();
        int messageTimeout = resourceMap.getInteger("StatusBar.messageTimeout");
        messageTimer = new Timer(messageTimeout, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                statusMessageLabel.setText("");
            }
        });
        messageTimer.setRepeats(false);
        int busyAnimationRate = resourceMap.getInteger("StatusBar.busyAnimationRate");
        for (int i = 0; i < busyIcons.length; i++) {
            busyIcons[i] = resourceMap.getIcon("StatusBar.busyIcons[" + i + "]");
        }
        busyIconTimer = new Timer(busyAnimationRate, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                busyIconIndex = (busyIconIndex + 1) % busyIcons.length;
                statusAnimationLabel.setIcon(busyIcons[busyIconIndex]);
            }
        });
        idleIcon = resourceMap.getIcon("StatusBar.idleIcon");
        statusAnimationLabel.setIcon(idleIcon);
        progressBar.setVisible(false);

        // connecting action tasks to status bar via TaskMonitor
        TaskMonitor taskMonitor = new TaskMonitor(getApplication().getContext());
        taskMonitor.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                String propertyName = evt.getPropertyName();
                if ("started".equals(propertyName)) {
                    if (!busyIconTimer.isRunning()) {
                        statusAnimationLabel.setIcon(busyIcons[0]);
                        busyIconIndex = 0;
                        busyIconTimer.start();
                    }
                    progressBar.setVisible(true);
                    progressBar.setIndeterminate(true);
                } else if ("done".equals(propertyName)) {
                    busyIconTimer.stop();
                    statusAnimationLabel.setIcon(idleIcon);
                    progressBar.setVisible(false);
                    progressBar.setValue(0);
                } else if ("message".equals(propertyName)) {
                    String text = (String)(evt.getNewValue());
                    statusMessageLabel.setText((text == null) ? "" : text);
                    messageTimer.restart();
                } else if ("progress".equals(propertyName)) {
                    int value = (Integer)(evt.getNewValue());
                    progressBar.setVisible(true);
                    progressBar.setIndeterminate(false);
                    progressBar.setValue(value);
                }
            }
        });
    }

    @Action
    public void showAboutBox() {
        if (aboutBox == null) {
            JFrame mainFrame = CreditCardApp.getApplication().getMainFrame();
            aboutBox = new CreditCardAboutBox(mainFrame);
            aboutBox.setLocationRelativeTo(mainFrame);
        }
        CreditCardApp.getApplication().show(aboutBox);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        jlblAccountNum = new javax.swing.JLabel();
        jtxtAcctNo = new javax.swing.JTextField();
        jbtnNew = new javax.swing.JButton();
        jbtnOpen = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jlblCharge = new javax.swing.JLabel();
        jlblPayment = new javax.swing.JLabel();
        jlblCreditIncrease = new javax.swing.JLabel();
        jlblInt = new javax.swing.JLabel();
        jtxtIncrease = new javax.swing.JTextField();
        jtxtCharge = new javax.swing.JTextField();
        jtxtPayment = new javax.swing.JTextField();
        jtxtInt = new javax.swing.JTextField();
        jbtnPayment = new javax.swing.JButton();
        jbtnRequest = new javax.swing.JButton();
        jbtnPostInt = new javax.swing.JButton();
        jlblDesc = new javax.swing.JLabel();
        jtxtDesc = new javax.swing.JTextField();
        jbtnCharge = new javax.swing.JButton();
        jbtnHistory = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jlblLimit = new javax.swing.JLabel();
        jlblBalDue = new javax.swing.JLabel();
        jlblAvail = new javax.swing.JLabel();
        jtxtBalDue = new javax.swing.JTextField();
        jtxtAvail = new javax.swing.JTextField();
        jtxtLimit = new javax.swing.JTextField();
        menuBar = new javax.swing.JMenuBar();
        javax.swing.JMenu fileMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem exitMenuItem = new javax.swing.JMenuItem();
        javax.swing.JMenu helpMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem aboutMenuItem = new javax.swing.JMenuItem();
        statusPanel = new javax.swing.JPanel();
        javax.swing.JSeparator statusPanelSeparator = new javax.swing.JSeparator();
        statusMessageLabel = new javax.swing.JLabel();
        statusAnimationLabel = new javax.swing.JLabel();
        progressBar = new javax.swing.JProgressBar();

        mainPanel.setName("mainPanel"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(creditcard.CreditCardApp.class).getContext().getResourceMap(CreditCardView.class);
        jlblAccountNum.setText(resourceMap.getString("jlblAccountNum.text")); // NOI18N
        jlblAccountNum.setName("jlblAccountNum"); // NOI18N

        jtxtAcctNo.setText(resourceMap.getString("jtxtAcctNo.text")); // NOI18N
        jtxtAcctNo.setName("jtxtAcctNo"); // NOI18N

        jbtnNew.setText(resourceMap.getString("jbtnNew.text")); // NOI18N
        jbtnNew.setName("jbtnNew"); // NOI18N
        jbtnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnNewActionPerformed(evt);
            }
        });

        jbtnOpen.setText(resourceMap.getString("jbtnOpen.text")); // NOI18N
        jbtnOpen.setName("jbtnOpen"); // NOI18N
        jbtnOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnOpenActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setName("jPanel1"); // NOI18N

        jlblCharge.setText(resourceMap.getString("jlblCharge.text")); // NOI18N
        jlblCharge.setName("jlblCharge"); // NOI18N

        jlblPayment.setText(resourceMap.getString("jlblPayment.text")); // NOI18N
        jlblPayment.setName("jlblPayment"); // NOI18N

        jlblCreditIncrease.setText(resourceMap.getString("jlblCreditIncrease.text")); // NOI18N
        jlblCreditIncrease.setName("jlblCreditIncrease"); // NOI18N

        jlblInt.setText(resourceMap.getString("jlblInt.text")); // NOI18N
        jlblInt.setName("jlblInt"); // NOI18N

        jtxtIncrease.setText(resourceMap.getString("jtxtIncrease.text")); // NOI18N
        jtxtIncrease.setName("jtxtIncrease"); // NOI18N

        jtxtCharge.setText(resourceMap.getString("jtxtCharge.text")); // NOI18N
        jtxtCharge.setToolTipText(resourceMap.getString("jtxtCharge.toolTipText")); // NOI18N
        jtxtCharge.setName("jtxtCharge"); // NOI18N

        jtxtPayment.setText(resourceMap.getString("jtxtPayment.text")); // NOI18N
        jtxtPayment.setName("jtxtPayment"); // NOI18N

        jtxtInt.setText(resourceMap.getString("jtxtInt.text")); // NOI18N
        jtxtInt.setName("jtxtInt"); // NOI18N

        jbtnPayment.setText(resourceMap.getString("jbtnPayment.text")); // NOI18N
        jbtnPayment.setName("jbtnPayment"); // NOI18N
        jbtnPayment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnPaymentActionPerformed(evt);
            }
        });

        jbtnRequest.setText(resourceMap.getString("jbtnRequest.text")); // NOI18N
        jbtnRequest.setName("jbtnRequest"); // NOI18N
        jbtnRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnRequestActionPerformed(evt);
            }
        });

        jbtnPostInt.setText(resourceMap.getString("jbtnPostInt.text")); // NOI18N
        jbtnPostInt.setName("jbtnPostInt"); // NOI18N
        jbtnPostInt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnPostIntActionPerformed(evt);
            }
        });

        jlblDesc.setText(resourceMap.getString("jlblDesc.text")); // NOI18N
        jlblDesc.setName("jlblDesc"); // NOI18N

        jtxtDesc.setText(resourceMap.getString("jtxtDesc.text")); // NOI18N
        jtxtDesc.setName("jtxtDesc"); // NOI18N

        jbtnCharge.setText(resourceMap.getString("jbtnCharge.text")); // NOI18N
        jbtnCharge.setName("jbtnCharge"); // NOI18N
        jbtnCharge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnChargeActionPerformed(evt);
            }
        });

        jbtnHistory.setText(resourceMap.getString("jbtnHistory.text")); // NOI18N
        jbtnHistory.setName("jbtnHistory"); // NOI18N
        jbtnHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnHistoryActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jlblInt)
                        .addGap(18, 18, 18)
                        .addComponent(jtxtInt))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlblCreditIncrease)
                            .addComponent(jlblCharge)
                            .addComponent(jlblPayment))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jtxtIncrease)
                            .addComponent(jtxtPayment, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                            .addComponent(jtxtCharge))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jbtnPostInt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jbtnRequest, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jbtnPayment, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbtnHistory, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jlblDesc)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jtxtDesc, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtnCharge)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblCharge)
                    .addComponent(jtxtCharge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlblDesc)
                    .addComponent(jtxtDesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtnCharge))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblPayment)
                    .addComponent(jtxtPayment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtnPayment))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblCreditIncrease)
                    .addComponent(jtxtIncrease, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtnRequest)
                    .addComponent(jbtnHistory))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblInt)
                    .addComponent(jtxtInt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtnPostInt))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setName("jPanel2"); // NOI18N

        jlblLimit.setText(resourceMap.getString("jlblLimit.text")); // NOI18N
        jlblLimit.setName("jlblLimit"); // NOI18N

        jlblBalDue.setText(resourceMap.getString("jlblBalDue.text")); // NOI18N
        jlblBalDue.setName("jlblBalDue"); // NOI18N

        jlblAvail.setText(resourceMap.getString("jlblAvail.text")); // NOI18N
        jlblAvail.setName("jlblAvail"); // NOI18N

        jtxtBalDue.setEditable(false);
        jtxtBalDue.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtxtBalDue.setText(resourceMap.getString("jtxtBalDue.text")); // NOI18N
        jtxtBalDue.setName("jtxtBalDue"); // NOI18N

        jtxtAvail.setEditable(false);
        jtxtAvail.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtxtAvail.setName("jtxtAvail"); // NOI18N

        jtxtLimit.setEditable(false);
        jtxtLimit.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtxtLimit.setName("jtxtLimit"); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlblAvail)
                    .addComponent(jlblBalDue)
                    .addComponent(jlblLimit))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtxtLimit, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtxtBalDue, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtxtAvail, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblLimit)
                    .addComponent(jtxtLimit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblBalDue)
                    .addComponent(jtxtBalDue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblAvail)
                    .addComponent(jtxtAvail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(jlblAccountNum)
                        .addGap(18, 18, 18)
                        .addComponent(jtxtAcctNo, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jbtnNew)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtnOpen)
                        .addGap(0, 64, Short.MAX_VALUE))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblAccountNum)
                    .addComponent(jtxtAcctNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtnNew)
                    .addComponent(jbtnOpen))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        menuBar.setName("menuBar"); // NOI18N

        fileMenu.setText(resourceMap.getString("fileMenu.text")); // NOI18N
        fileMenu.setName("fileMenu"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(creditcard.CreditCardApp.class).getContext().getActionMap(CreditCardView.class, this);
        exitMenuItem.setAction(actionMap.get("quit")); // NOI18N
        exitMenuItem.setName("exitMenuItem"); // NOI18N
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        helpMenu.setText(resourceMap.getString("helpMenu.text")); // NOI18N
        helpMenu.setName("helpMenu"); // NOI18N

        aboutMenuItem.setAction(actionMap.get("showAboutBox")); // NOI18N
        aboutMenuItem.setName("aboutMenuItem"); // NOI18N
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        statusPanel.setName("statusPanel"); // NOI18N

        statusPanelSeparator.setName("statusPanelSeparator"); // NOI18N

        statusMessageLabel.setName("statusMessageLabel"); // NOI18N

        statusAnimationLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        statusAnimationLabel.setName("statusAnimationLabel"); // NOI18N

        progressBar.setName("progressBar"); // NOI18N

        javax.swing.GroupLayout statusPanelLayout = new javax.swing.GroupLayout(statusPanel);
        statusPanel.setLayout(statusPanelLayout);
        statusPanelLayout.setHorizontalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(statusPanelSeparator, javax.swing.GroupLayout.DEFAULT_SIZE, 569, Short.MAX_VALUE)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(statusMessageLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 399, Short.MAX_VALUE)
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusAnimationLabel)
                .addContainerGap())
        );
        statusPanelLayout.setVerticalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addComponent(statusPanelSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(statusMessageLabel)
                    .addComponent(statusAnimationLabel)
                    .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3))
        );

        setComponent(mainPanel);
        setMenuBar(menuBar);
        setStatusBar(statusPanel);
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnNewActionPerformed
        statusMessageLabel.setText("");
        cc = new Card();
        if (!cc.getErrorMsg().isEmpty()) {
            statusMessageLabel.setText(cc.getErrorMsg());
        }
        else {
            jtxtAcctNo.setText(String.valueOf(cc.getAcctNo()));
            DisplayValues(); // Write lower part of form
            statusMessageLabel.setText(cc.getActionMsg());
        }
    }//GEN-LAST:event_jbtnNewActionPerformed

    private void jbtnOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnOpenActionPerformed
        statusMessageLabel.setText("");
        int acctno;
        if (jtxtAcctNo.getText().isEmpty()) {
            JFileChooser f = new JFileChooser(".");
            String nm = "";
            FileNameExtensionFilter filter = new FileNameExtensionFilter("Text File (*.txt)", "txt");
            f.setFileFilter(filter);
            f.setDialogTitle("Select Account File");
            
            JDialog dg = new JDialog();
            int rval = f.showOpenDialog(dg);
            if (rval == JFileChooser.CANCEL_OPTION) {
                statusMessageLabel.setText("Selection Canceled.");
                return;
            }
            nm = f.getSelectedFile().getName();
            if (nm.startsWith("CCL")) {
                jtxtAcctNo.setText(nm.substring(3).replaceAll(".txt",""));
            }
            else if (nm.startsWith("CC")) {
                jtxtAcctNo.setText(nm.substring(2).replaceAll(".txt",""));
            }
            else {
                statusMessageLabel.setText("Not an account file.");
                jtxtAcctNo.setText("");
                jtxtAcctNo.requestFocusInWindow();
                return;
            }
        }
        try {
            acctno = Integer.parseInt(jtxtAcctNo.getText());
            cc = new Card(acctno);
            if (!cc.getErrorMsg().isEmpty()) {
                statusMessageLabel.setText(cc.getErrorMsg());
            }
            else {
                DisplayValues();
                statusMessageLabel.setText(cc.getActionMsg());
            }
        }
        catch (Exception e) {
            statusMessageLabel.setText("Illegal account #");
            jtxtAcctNo.setText("");
            jtxtAcctNo.requestFocusInWindow();
        }
    }//GEN-LAST:event_jbtnOpenActionPerformed

    private void jbtnChargeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnChargeActionPerformed
        statusMessageLabel.setText("");
        double charge;
        try {
            charge = Double.parseDouble(jtxtCharge.getText());
            cc.setCharge(charge,jtxtDesc.getText());
            if (!cc.getErrorMsg().isEmpty()) {
                statusMessageLabel.setText(cc.getErrorMsg());
            }
            else {
                DisplayValues();
                statusMessageLabel.setText(cc.getActionMsg());
            }
        }
        catch (Exception e) {
            statusMessageLabel.setText("Illegal charge amount");
        }
        jtxtCharge.setText("");
        jtxtDesc.setText("");
        jtxtCharge.requestFocusInWindow();
    }//GEN-LAST:event_jbtnChargeActionPerformed

    private void jbtnPaymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnPaymentActionPerformed
        statusMessageLabel.setText("");
        double payment;
        try {
            payment = Double.parseDouble(jtxtPayment.getText());
            cc.setPayment(payment);
            if (!cc.getErrorMsg().isEmpty()) {
                statusMessageLabel.setText(cc.getErrorMsg());
            }
            else {
                DisplayValues();
                statusMessageLabel.setText(cc.getActionMsg());
            }
        }
        catch (Exception e) {
            statusMessageLabel.setText("Illegal payment amount");
        }
        jtxtPayment.setText("");
        jtxtPayment.requestFocusInWindow();
    }//GEN-LAST:event_jbtnPaymentActionPerformed

    private void jbtnRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnRequestActionPerformed
        statusMessageLabel.setText("");
        double increase;
        try {
            increase = Double.parseDouble(jtxtIncrease.getText());
            cc.setLimitIncrease(increase);
            if (!cc.getErrorMsg().isEmpty()) {
                statusMessageLabel.setText(cc.getErrorMsg());
            }
            else {
                DisplayValues();
                statusMessageLabel.setText(cc.getActionMsg());
            }
        }
        catch (Exception e) {
            statusMessageLabel.setText("Illegal increase amount");
        }
        jtxtIncrease.setText("");
        jtxtIncrease.requestFocusInWindow();
    }//GEN-LAST:event_jbtnRequestActionPerformed

    private void jbtnHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnHistoryActionPerformed
        statusMessageLabel.setText("");
        
        ArrayList<String> hist = cc.getLog();
        if (!cc.getErrorMsg().isEmpty()) {
            statusMessageLabel.setText(cc.getErrorMsg());
            return;
        }
        statusMessageLabel.setText(cc.getActionMsg());
        JTextArea t = new JTextArea();
        for(String s : hist) {
            t.append(s + "\n");
        }
        JScrollPane sp = new JScrollPane(t);
        JDialog dg = new JDialog();
        dg.add(sp);
        dg.setTitle("Account history for: " + cc.getAcctNo());
        dg.setBounds(150, 300, 600, 300);
        dg.setVisible(true);
    }//GEN-LAST:event_jbtnHistoryActionPerformed

    private void jbtnPostIntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnPostIntActionPerformed
        statusMessageLabel.setText("");
        double rate;
        try {
            rate = Double.parseDouble(jtxtInt.getText());
            cc.setInterest(rate);
            if (!cc.getErrorMsg().isEmpty()) {
                statusMessageLabel.setText(cc.getErrorMsg());
            }
            else {
                DisplayValues();
                statusMessageLabel.setText(cc.getActionMsg());
            }
        }
        catch (Exception e) {
            statusMessageLabel.setText("Illegal interest rate");
        }
        jtxtInt.setText("");
        jtxtInt.requestFocusInWindow();
    }//GEN-LAST:event_jbtnPostIntActionPerformed
    
    private void DisplayValues() {
        NumberFormat curr = NumberFormat.getCurrencyInstance();
        jtxtLimit.setText(curr.format(cc.getLimit()));
        jtxtBalDue.setText(curr.format(cc.getBalDue()));
        jtxtAvail.setText(curr.format(cc.getAvail()));
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton jbtnCharge;
    private javax.swing.JButton jbtnHistory;
    private javax.swing.JButton jbtnNew;
    private javax.swing.JButton jbtnOpen;
    private javax.swing.JButton jbtnPayment;
    private javax.swing.JButton jbtnPostInt;
    private javax.swing.JButton jbtnRequest;
    private javax.swing.JLabel jlblAccountNum;
    private javax.swing.JLabel jlblAvail;
    private javax.swing.JLabel jlblBalDue;
    private javax.swing.JLabel jlblCharge;
    private javax.swing.JLabel jlblCreditIncrease;
    private javax.swing.JLabel jlblDesc;
    private javax.swing.JLabel jlblInt;
    private javax.swing.JLabel jlblLimit;
    private javax.swing.JLabel jlblPayment;
    private javax.swing.JTextField jtxtAcctNo;
    private javax.swing.JTextField jtxtAvail;
    private javax.swing.JTextField jtxtBalDue;
    private javax.swing.JTextField jtxtCharge;
    private javax.swing.JTextField jtxtDesc;
    private javax.swing.JTextField jtxtIncrease;
    private javax.swing.JTextField jtxtInt;
    private javax.swing.JTextField jtxtLimit;
    private javax.swing.JTextField jtxtPayment;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JLabel statusAnimationLabel;
    private javax.swing.JLabel statusMessageLabel;
    private javax.swing.JPanel statusPanel;
    // End of variables declaration//GEN-END:variables

    private final Timer messageTimer;
    private final Timer busyIconTimer;
    private final Icon idleIcon;
    private final Icon[] busyIcons = new Icon[15];
    private int busyIconIndex = 0;

    private JDialog aboutBox;
}
